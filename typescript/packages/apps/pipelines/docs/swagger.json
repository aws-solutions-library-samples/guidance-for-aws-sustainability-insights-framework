{
  "openapi": "3.0.3",
  "info": {
    "title": "SIF SaaS: Pipeline Management",
    "description": "\nHas accountability for:\n- Managing Data Processing Pipelines.\n",
    "version": "0.0.1"
  },
  "components": {
    "securitySchemes": {
      "platformUserPool": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "tags": {
        "description": "User-defined searchable tags",
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "newPipelineRequestBody": {
        "type": "object",
        "properties": {
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "description": {
            "description": "Expanded description of the pipeline.",
            "type": "string"
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "name": {
            "description": "Pipeline name.",
            "type": "string"
          },
          "connectorConfig": {
            "type": "object",
            "properties": {
              "input": {
                "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "output": {
                "description": "specifies list of output connectors",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "required": [
              "input"
            ]
          },
          "processorOptions": {
            "type": "object",
            "properties": {
              "chunkSize": {
                "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                "minimum": 1,
                "maximum": 5,
                "type": "number"
              }
            }
          },
          "transformer": {
            "description": "Transformer configuration of the pipeline.",
            "type": "object",
            "properties": {
              "transforms": {
                "description": "Transformations to apply to incoming data.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the transforms to apply.",
                      "type": "number"
                    },
                    "formula": {
                      "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                      "type": "string"
                    },
                    "outputs": {
                      "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description explaining the output.",
                            "type": "string"
                          },
                          "index": {
                            "description": "Index (sequence) of the transform.",
                            "type": "number"
                          },
                          "key": {
                            "description": "Output unique key.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the output for UI display.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "timestamp"
                            ],
                            "description": "Attribute type."
                          },
                          "aggregate": {
                            "type": "string",
                            "enum": [
                              "groupBy",
                              "sum",
                              "mean",
                              "max",
                              "min",
                              "count"
                            ],
                            "description": "Aggregate type."
                          },
                          "includeAsUnique": {
                            "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                            "type": "boolean"
                          },
                          "_keyMapping": {
                            "description": "Output key offset.",
                            "type": "string"
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "description": "If set, this value will be aggregated as an input to the Metric.",
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "index",
                          "key",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "index",
                    "formula",
                    "outputs"
                  ]
                }
              },
              "parameters": {
                "description": "Parameters to be used as part of transformations.",
                "type": "array",
                "items": {
                  "description": "A parameter to be used as part of transformations.",
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the input parameter.",
                      "type": "number"
                    },
                    "key": {
                      "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                      "type": "string"
                    },
                    "label": {
                      "description": "Label of the input parameter for UI display.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description explaining the input parameter.",
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "timestamp"
                      ],
                      "description": "Attribute type."
                    }
                  },
                  "required": [
                    "index",
                    "key",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "transforms",
              "parameters"
            ]
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        },
        "required": [
          "name",
          "transformer"
        ]
      },
      "pipelineResource": {
        "type": "object",
        "properties": {
          "_aggregatedOutputKeyAndTypeMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the pipeline.",
            "type": "string"
          },
          "groups": {
            "description": "Groups that have access to the calculation.",
            "type": "array",
            "items": {
              "description": "The group ID as managed by the Access Management module.",
              "type": "string"
            }
          },
          "id": {
            "description": "Unique id.",
            "type": "string"
          },
          "name": {
            "description": "Pipeline name.",
            "type": "string"
          },
          "processorOptions": {
            "type": "object",
            "properties": {
              "chunkSize": {
                "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                "minimum": 1,
                "maximum": 5,
                "type": "number"
              }
            }
          },
          "connectorConfig": {
            "type": "object",
            "properties": {
              "input": {
                "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "output": {
                "description": "specifies list of output connectors",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "required": [
              "input"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "transformer": {
            "description": "Transformer configuration of the pipeline.",
            "type": "object",
            "properties": {
              "transforms": {
                "description": "Transformations to apply to incoming data.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the transforms to apply.",
                      "type": "number"
                    },
                    "formula": {
                      "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                      "type": "string"
                    },
                    "outputs": {
                      "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description explaining the output.",
                            "type": "string"
                          },
                          "index": {
                            "description": "Index (sequence) of the transform.",
                            "type": "number"
                          },
                          "key": {
                            "description": "Output unique key.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the output for UI display.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "timestamp"
                            ],
                            "description": "Attribute type."
                          },
                          "aggregate": {
                            "type": "string",
                            "enum": [
                              "groupBy",
                              "sum",
                              "mean",
                              "max",
                              "min",
                              "count"
                            ],
                            "description": "Aggregate type."
                          },
                          "includeAsUnique": {
                            "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                            "type": "boolean"
                          },
                          "_keyMapping": {
                            "description": "Output key offset.",
                            "type": "string"
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "description": "If set, this value will be aggregated as an input to the Metric.",
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "index",
                          "key",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "index",
                    "formula",
                    "outputs"
                  ]
                }
              },
              "parameters": {
                "description": "Parameters to be used as part of transformations.",
                "type": "array",
                "items": {
                  "description": "A parameter to be used as part of transformations.",
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the input parameter.",
                      "type": "number"
                    },
                    "key": {
                      "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                      "type": "string"
                    },
                    "label": {
                      "description": "Label of the input parameter for UI display.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description explaining the input parameter.",
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "timestamp"
                      ],
                      "description": "Attribute type."
                    }
                  },
                  "required": [
                    "index",
                    "key",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "transforms",
              "parameters"
            ]
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "version": {
            "description": "version number of the pipeline. The pipeline version is always incremented when there is an update to the pipeline configuration itself.",
            "type": "number"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "groups",
          "id",
          "name",
          "state",
          "transformer",
          "version"
        ]
      },
      "editPipelineRequestBody": {
        "type": "object",
        "properties": {
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "description": {
            "description": "Expanded description of the pipeline.",
            "type": "string"
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "name": {
            "description": "Pipeline name.",
            "type": "string"
          },
          "connectorConfig": {
            "type": "object",
            "properties": {
              "input": {
                "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "output": {
                "description": "specifies list of output connectors",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name of the connector",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "connectors config related parameters passed down as default for the pipeline itself",
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "required": [
              "input"
            ]
          },
          "processorOptions": {
            "type": "object",
            "properties": {
              "chunkSize": {
                "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                "minimum": 1,
                "maximum": 5,
                "type": "number"
              }
            }
          },
          "transformer": {
            "description": "Transformer configuration of the pipeline.",
            "type": "object",
            "properties": {
              "transforms": {
                "description": "Transformations to apply to incoming data.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the transforms to apply.",
                      "type": "number"
                    },
                    "formula": {
                      "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                      "type": "string"
                    },
                    "outputs": {
                      "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "Description explaining the output.",
                            "type": "string"
                          },
                          "index": {
                            "description": "Index (sequence) of the transform.",
                            "type": "number"
                          },
                          "key": {
                            "description": "Output unique key.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the output for UI display.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "timestamp"
                            ],
                            "description": "Attribute type."
                          },
                          "aggregate": {
                            "type": "string",
                            "enum": [
                              "groupBy",
                              "sum",
                              "mean",
                              "max",
                              "min",
                              "count"
                            ],
                            "description": "Aggregate type."
                          },
                          "includeAsUnique": {
                            "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                            "type": "boolean"
                          },
                          "_keyMapping": {
                            "description": "Output key offset.",
                            "type": "string"
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "description": "If set, this value will be aggregated as an input to the Metric.",
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "index",
                          "key",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "index",
                    "formula",
                    "outputs"
                  ]
                }
              },
              "parameters": {
                "description": "Parameters to be used as part of transformations.",
                "type": "array",
                "items": {
                  "description": "A parameter to be used as part of transformations.",
                  "type": "object",
                  "properties": {
                    "index": {
                      "description": "Index (sequence) of the input parameter.",
                      "type": "number"
                    },
                    "key": {
                      "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                      "type": "string"
                    },
                    "label": {
                      "description": "Label of the input parameter for UI display.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description explaining the input parameter.",
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "number",
                        "boolean",
                        "timestamp"
                      ],
                      "description": "Attribute type."
                    }
                  },
                  "required": [
                    "index",
                    "key",
                    "type"
                  ]
                }
              }
            },
            "required": [
              "transforms",
              "parameters"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "pipelineList": {
        "type": "object",
        "properties": {
          "pipelines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_aggregatedOutputKeyAndTypeMap": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "activeAt": {
                  "description": "Date/time resource is active",
                  "format": "date-time",
                  "type": "string"
                },
                "attributes": {
                  "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "dryRunOptions": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "An object with key values representing the parameters and its expected values.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "createdAt": {
                  "description": "Date/time created",
                  "format": "date-time",
                  "type": "string"
                },
                "createdBy": {
                  "description": "ID of owner.",
                  "type": "string"
                },
                "description": {
                  "description": "Expanded description of the pipeline.",
                  "type": "string"
                },
                "groups": {
                  "description": "Groups that have access to the calculation.",
                  "type": "array",
                  "items": {
                    "description": "The group ID as managed by the Access Management module.",
                    "type": "string"
                  }
                },
                "id": {
                  "description": "Unique id.",
                  "type": "string"
                },
                "name": {
                  "description": "Pipeline name.",
                  "type": "string"
                },
                "processorOptions": {
                  "type": "object",
                  "properties": {
                    "chunkSize": {
                      "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                      "minimum": 1,
                      "maximum": 5,
                      "type": "number"
                    }
                  }
                },
                "connectorConfig": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "name of the connector",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "connectors config related parameters passed down as default for the pipeline itself",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "output": {
                      "description": "specifies list of output connectors",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "name of the connector",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "connectors config related parameters passed down as default for the pipeline itself",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "input"
                  ]
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "frozen",
                    "disabled"
                  ],
                  "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                },
                "tags": {
                  "description": "User-defined searchable tags",
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "transformer": {
                  "description": "Transformer configuration of the pipeline.",
                  "type": "object",
                  "properties": {
                    "transforms": {
                      "description": "Transformations to apply to incoming data.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "description": "Index (sequence) of the transforms to apply.",
                            "type": "number"
                          },
                          "formula": {
                            "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                            "type": "string"
                          },
                          "outputs": {
                            "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "description": "Description explaining the output.",
                                  "type": "string"
                                },
                                "index": {
                                  "description": "Index (sequence) of the transform.",
                                  "type": "number"
                                },
                                "key": {
                                  "description": "Output unique key.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label of the output for UI display.",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "string",
                                    "number",
                                    "boolean",
                                    "timestamp"
                                  ],
                                  "description": "Attribute type."
                                },
                                "aggregate": {
                                  "type": "string",
                                  "enum": [
                                    "groupBy",
                                    "sum",
                                    "mean",
                                    "max",
                                    "min",
                                    "count"
                                  ],
                                  "description": "Aggregate type."
                                },
                                "includeAsUnique": {
                                  "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                                  "type": "boolean"
                                },
                                "_keyMapping": {
                                  "description": "Output key offset.",
                                  "type": "string"
                                },
                                "metrics": {
                                  "type": "array",
                                  "items": {
                                    "description": "If set, this value will be aggregated as an input to the Metric.",
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "index",
                                "key",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "index",
                          "formula",
                          "outputs"
                        ]
                      }
                    },
                    "parameters": {
                      "description": "Parameters to be used as part of transformations.",
                      "type": "array",
                      "items": {
                        "description": "A parameter to be used as part of transformations.",
                        "type": "object",
                        "properties": {
                          "index": {
                            "description": "Index (sequence) of the input parameter.",
                            "type": "number"
                          },
                          "key": {
                            "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the input parameter for UI display.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description explaining the input parameter.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "timestamp"
                            ],
                            "description": "Attribute type."
                          }
                        },
                        "required": [
                          "index",
                          "key",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transforms",
                    "parameters"
                  ]
                },
                "updatedAt": {
                  "description": "Date/time updated",
                  "format": "date-time",
                  "type": "string"
                },
                "updatedBy": {
                  "description": "Last ID of user who made a change.",
                  "type": "string"
                },
                "version": {
                  "description": "version number of the pipeline. The pipeline version is always incremented when there is an update to the pipeline configuration itself.",
                  "type": "number"
                }
              },
              "required": [
                "createdAt",
                "createdBy",
                "groups",
                "id",
                "name",
                "state",
                "transformer",
                "version"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "description": "No. of results returned when pagination requested.",
                "type": "integer"
              },
              "lastEvaluatedToken": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "pipelines"
        ]
      },
      "pipelineVersionList": {
        "type": "object",
        "properties": {
          "pipelines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_aggregatedOutputKeyAndTypeMap": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "activeAt": {
                  "description": "Date/time resource is active",
                  "format": "date-time",
                  "type": "string"
                },
                "attributes": {
                  "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "dryRunOptions": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "An object with key values representing the parameters and its expected values.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "createdAt": {
                  "description": "Date/time created",
                  "format": "date-time",
                  "type": "string"
                },
                "createdBy": {
                  "description": "ID of owner.",
                  "type": "string"
                },
                "description": {
                  "description": "Expanded description of the pipeline.",
                  "type": "string"
                },
                "groups": {
                  "description": "Groups that have access to the calculation.",
                  "type": "array",
                  "items": {
                    "description": "The group ID as managed by the Access Management module.",
                    "type": "string"
                  }
                },
                "id": {
                  "description": "Unique id.",
                  "type": "string"
                },
                "name": {
                  "description": "Pipeline name.",
                  "type": "string"
                },
                "processorOptions": {
                  "type": "object",
                  "properties": {
                    "chunkSize": {
                      "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                      "minimum": 1,
                      "maximum": 5,
                      "type": "number"
                    }
                  }
                },
                "connectorConfig": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "name of the connector",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "connectors config related parameters passed down as default for the pipeline itself",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "output": {
                      "description": "specifies list of output connectors",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "name of the connector",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "connectors config related parameters passed down as default for the pipeline itself",
                            "type": "object",
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "input"
                  ]
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "frozen",
                    "disabled"
                  ],
                  "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                },
                "tags": {
                  "description": "User-defined searchable tags",
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "transformer": {
                  "description": "Transformer configuration of the pipeline.",
                  "type": "object",
                  "properties": {
                    "transforms": {
                      "description": "Transformations to apply to incoming data.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "description": "Index (sequence) of the transforms to apply.",
                            "type": "number"
                          },
                          "formula": {
                            "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                            "type": "string"
                          },
                          "outputs": {
                            "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "description": "Description explaining the output.",
                                  "type": "string"
                                },
                                "index": {
                                  "description": "Index (sequence) of the transform.",
                                  "type": "number"
                                },
                                "key": {
                                  "description": "Output unique key.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label of the output for UI display.",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "string",
                                    "number",
                                    "boolean",
                                    "timestamp"
                                  ],
                                  "description": "Attribute type."
                                },
                                "aggregate": {
                                  "type": "string",
                                  "enum": [
                                    "groupBy",
                                    "sum",
                                    "mean",
                                    "max",
                                    "min",
                                    "count"
                                  ],
                                  "description": "Aggregate type."
                                },
                                "includeAsUnique": {
                                  "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                                  "type": "boolean"
                                },
                                "_keyMapping": {
                                  "description": "Output key offset.",
                                  "type": "string"
                                },
                                "metrics": {
                                  "type": "array",
                                  "items": {
                                    "description": "If set, this value will be aggregated as an input to the Metric.",
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "index",
                                "key",
                                "type"
                              ]
                            }
                          }
                        },
                        "required": [
                          "index",
                          "formula",
                          "outputs"
                        ]
                      }
                    },
                    "parameters": {
                      "description": "Parameters to be used as part of transformations.",
                      "type": "array",
                      "items": {
                        "description": "A parameter to be used as part of transformations.",
                        "type": "object",
                        "properties": {
                          "index": {
                            "description": "Index (sequence) of the input parameter.",
                            "type": "number"
                          },
                          "key": {
                            "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the input parameter for UI display.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description explaining the input parameter.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean",
                              "timestamp"
                            ],
                            "description": "Attribute type."
                          }
                        },
                        "required": [
                          "index",
                          "key",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "transforms",
                    "parameters"
                  ]
                },
                "updatedAt": {
                  "description": "Date/time updated",
                  "format": "date-time",
                  "type": "string"
                },
                "updatedBy": {
                  "description": "Last ID of user who made a change.",
                  "type": "string"
                },
                "version": {
                  "description": "version number of the pipeline. The pipeline version is always incremented when there is an update to the pipeline configuration itself.",
                  "type": "number"
                }
              },
              "required": [
                "createdAt",
                "createdBy",
                "groups",
                "id",
                "name",
                "state",
                "transformer",
                "version"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "lastEvaluatedVersion": {
                "description": "Last evaluated version.",
                "type": "number"
              }
            }
          }
        },
        "required": [
          "pipelines"
        ]
      },
      "newMetricRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Metric. How the Metric is referenced from within a transform.",
            "type": "string"
          },
          "summary": {
            "description": "Concise summary of the Metric.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the Metric.",
            "type": "string"
          },
          "aggregationType": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "count",
              "sum",
              "mean"
            ],
            "description": "Aggregation type to be performed for the Metric."
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "outputMetrics": {
            "description": "A list of Metric's that this Metric will contribute to.",
            "type": "array",
            "items": {
              "description": "Metric name",
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "summary",
          "aggregationType"
        ]
      },
      "metricResource": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique id.",
            "type": "string"
          },
          "name": {
            "description": "Name of Metric. How the Metric is referenced from within a transform.",
            "type": "string"
          },
          "summary": {
            "description": "Concise summary of the Metric.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the Metric.",
            "type": "string"
          },
          "aggregationType": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "count",
              "sum",
              "mean"
            ],
            "description": "Aggregation type to be performed for the Metric."
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "outputMetrics": {
            "description": "A list of Metric's that this Metric will contribute to.",
            "type": "array",
            "items": {
              "description": "Metric name",
              "type": "string"
            }
          },
          "inputMetrics": {
            "description": "The existing Metric's configured to contribute to this Metric.",
            "type": "array",
            "items": {
              "description": "Metric name",
              "type": "string"
            }
          },
          "inputPipelines": {
            "description": "Pipeline transforms configured to contribute to this Metric.",
            "type": "array",
            "items": {
              "description": "A pipeline transform configured to contribute to this Metric.",
              "type": "object",
              "properties": {
                "pipelineId": {
                  "description": "Pipeline ID.",
                  "type": "string"
                },
                "output": {
                  "description": "Name of output column aggregated.",
                  "type": "string"
                }
              },
              "required": [
                "pipelineId",
                "output"
              ]
            }
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "groups": {
            "description": "Groups that have access to the calculation.",
            "type": "array",
            "items": {
              "description": "The group ID as managed by the Access Management module.",
              "type": "string"
            }
          },
          "version": {
            "description": "version number of the Metric. The Metric version is incremented whenever there is an update to the Metric.",
            "type": "number"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "summary",
          "aggregationType",
          "state",
          "groups",
          "version",
          "createdAt",
          "createdBy"
        ]
      },
      "editMetricRequestBody": {
        "type": "object",
        "properties": {
          "summary": {
            "description": "Concise summary of the Metric.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the Metric.",
            "type": "string"
          },
          "aggregationType": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "count",
              "sum",
              "mean"
            ],
            "description": "Aggregation type to be performed for the Metric."
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "attributes": {
            "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
            "type": "object",
            "additionalProperties": {}
          },
          "outputMetrics": {
            "description": "A list of Metric's that this Metric will contribute to.",
            "type": "array",
            "items": {
              "description": "Metric name",
              "type": "string"
            }
          }
        }
      },
      "metricList": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique id.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of Metric. How the Metric is referenced from within a transform.",
                  "type": "string"
                },
                "summary": {
                  "description": "Concise summary of the Metric.",
                  "type": "string"
                },
                "description": {
                  "description": "Expanded description of the Metric.",
                  "type": "string"
                },
                "aggregationType": {
                  "type": "string",
                  "enum": [
                    "min",
                    "max",
                    "count",
                    "sum",
                    "mean"
                  ],
                  "description": "Aggregation type to be performed for the Metric."
                },
                "tags": {
                  "description": "User-defined searchable tags",
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "frozen",
                    "disabled"
                  ],
                  "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                },
                "outputMetrics": {
                  "description": "A list of Metric's that this Metric will contribute to.",
                  "type": "array",
                  "items": {
                    "description": "Metric name",
                    "type": "string"
                  }
                },
                "inputMetrics": {
                  "description": "The existing Metric's configured to contribute to this Metric.",
                  "type": "array",
                  "items": {
                    "description": "Metric name",
                    "type": "string"
                  }
                },
                "inputPipelines": {
                  "description": "Pipeline transforms configured to contribute to this Metric.",
                  "type": "array",
                  "items": {
                    "description": "A pipeline transform configured to contribute to this Metric.",
                    "type": "object",
                    "properties": {
                      "pipelineId": {
                        "description": "Pipeline ID.",
                        "type": "string"
                      },
                      "output": {
                        "description": "Name of output column aggregated.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "pipelineId",
                      "output"
                    ]
                  }
                },
                "attributes": {
                  "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "groups": {
                  "description": "Groups that have access to the calculation.",
                  "type": "array",
                  "items": {
                    "description": "The group ID as managed by the Access Management module.",
                    "type": "string"
                  }
                },
                "version": {
                  "description": "version number of the Metric. The Metric version is incremented whenever there is an update to the Metric.",
                  "type": "number"
                },
                "createdAt": {
                  "description": "Date/time created",
                  "format": "date-time",
                  "type": "string"
                },
                "createdBy": {
                  "description": "ID of owner.",
                  "type": "string"
                },
                "updatedAt": {
                  "description": "Date/time updated",
                  "format": "date-time",
                  "type": "string"
                },
                "updatedBy": {
                  "description": "Last ID of user who made a change.",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "summary",
                "aggregationType",
                "state",
                "groups",
                "version",
                "createdAt",
                "createdBy"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "description": "No. of results returned when pagination requested.",
                "type": "integer"
              },
              "lastEvaluatedToken": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "metrics"
        ]
      },
      "connector": {
        "type": "object",
        "properties": {
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the connector.",
            "type": "string"
          },
          "groups": {
            "description": "Groups that have access to the calculation.",
            "type": "array",
            "items": {
              "description": "The group ID as managed by the Access Management module.",
              "type": "string"
            }
          },
          "id": {
            "description": "Unique id.",
            "type": "string"
          },
          "isManaged": {
            "description": "this marks the connector if its managed via SIF or not",
            "type": "boolean"
          },
          "name": {
            "description": "Connector name.",
            "type": "string"
          },
          "parameters": {
            "description": "list of connector configuration parameter objects",
            "type": "array",
            "items": {
              "description": "connector configuration object which specifies any configuration related key/val pairs passed down though the connector integration request",
              "type": "object",
              "properties": {
                "name": {
                  "description": "name or key of the parameter, should be unique",
                  "type": "string"
                },
                "description": {
                  "description": "relevant description related to the specified parameter",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "default value for the parameter",
                  "type": "string"
                },
                "required": {
                  "description": "specify true/false if this parameter is added to this list then at the time of pipeline execution this list will be evaluated against the parameters compiled together from the connector, pipeline and execution.",
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "requiresFileUpload": {
            "description": "this specifies if the connector requires a file to be uploaded through the execution, if this is specified as true, then a signed url will be generated to the execution request",
            "default": false,
            "type": "boolean"
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": {
            "description": "type of the connector, this specified if the connector should be used as an input of a pipeline or an output",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "input"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "output"
                ]
              }
            ]
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "createdBy",
          "groups",
          "id",
          "name",
          "type",
          "updatedAt"
        ]
      },
      "connectorCreateParams": {
        "type": "object",
        "properties": {
          "description": {
            "description": "Expanded description of the connector.",
            "type": "string"
          },
          "name": {
            "description": "Connector name.",
            "type": "string"
          },
          "parameters": {
            "description": "list of connector configuration parameter objects",
            "type": "array",
            "items": {
              "description": "connector configuration object which specifies any configuration related key/val pairs passed down though the connector integration request",
              "type": "object",
              "properties": {
                "name": {
                  "description": "name or key of the parameter, should be unique",
                  "type": "string"
                },
                "description": {
                  "description": "relevant description related to the specified parameter",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "default value for the parameter",
                  "type": "string"
                },
                "required": {
                  "description": "specify true/false if this parameter is added to this list then at the time of pipeline execution this list will be evaluated against the parameters compiled together from the connector, pipeline and execution.",
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "requiresFileUpload": {
            "description": "this specifies if the connector requires a file to be uploaded through the execution, if this is specified as true, then a signed url will be generated to the execution request",
            "default": false,
            "type": "boolean"
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "isManaged": {
            "description": "this marks the connector if its managed via SIF or not",
            "default": false,
            "type": "boolean"
          },
          "type": {
            "description": "type of the connector, this specified if the connector should be used as an input of a pipeline or an output",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "input"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "output"
                ]
              }
            ]
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "connectorUpdateParams": {
        "type": "object",
        "properties": {
          "description": {
            "description": "Expanded description of the connector.",
            "type": "string"
          },
          "name": {
            "description": "Connector name.",
            "type": "string"
          },
          "parameters": {
            "description": "list of connector configuration parameter objects",
            "type": "array",
            "items": {
              "description": "connector configuration object which specifies any configuration related key/val pairs passed down though the connector integration request",
              "type": "object",
              "properties": {
                "name": {
                  "description": "name or key of the parameter, should be unique",
                  "type": "string"
                },
                "description": {
                  "description": "relevant description related to the specified parameter",
                  "type": "string"
                },
                "defaultValue": {
                  "description": "default value for the parameter",
                  "type": "string"
                },
                "required": {
                  "description": "specify true/false if this parameter is added to this list then at the time of pipeline execution this list will be evaluated against the parameters compiled together from the connector, pipeline and execution.",
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "requiresFileUpload": {
            "description": "this specifies if the connector requires a file to be uploaded through the execution, if this is specified as true, then a signed url will be generated to the execution request",
            "default": false,
            "type": "boolean"
          },
          "tags": {
            "description": "User-defined searchable tags",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": {
            "description": "type of the connector, this specified if the connector should be used as an input of a pipeline or an output",
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "input"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "output"
                ]
              }
            ]
          }
        }
      },
      "connectorList": {
        "type": "object",
        "properties": {
          "connectors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "description": "Date/time created",
                  "format": "date-time",
                  "type": "string"
                },
                "createdBy": {
                  "description": "ID of owner.",
                  "type": "string"
                },
                "description": {
                  "description": "Expanded description of the connector.",
                  "type": "string"
                },
                "groups": {
                  "description": "Groups that have access to the calculation.",
                  "type": "array",
                  "items": {
                    "description": "The group ID as managed by the Access Management module.",
                    "type": "string"
                  }
                },
                "id": {
                  "description": "Unique id.",
                  "type": "string"
                },
                "isManaged": {
                  "description": "this marks the connector if its managed via SIF or not",
                  "type": "boolean"
                },
                "name": {
                  "description": "Connector name.",
                  "type": "string"
                },
                "parameters": {
                  "description": "list of connector configuration parameter objects",
                  "type": "array",
                  "items": {
                    "description": "connector configuration object which specifies any configuration related key/val pairs passed down though the connector integration request",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "name or key of the parameter, should be unique",
                        "type": "string"
                      },
                      "description": {
                        "description": "relevant description related to the specified parameter",
                        "type": "string"
                      },
                      "defaultValue": {
                        "description": "default value for the parameter",
                        "type": "string"
                      },
                      "required": {
                        "description": "specify true/false if this parameter is added to this list then at the time of pipeline execution this list will be evaluated against the parameters compiled together from the connector, pipeline and execution.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "requiresFileUpload": {
                  "description": "this specifies if the connector requires a file to be uploaded through the execution, if this is specified as true, then a signed url will be generated to the execution request",
                  "default": false,
                  "type": "boolean"
                },
                "tags": {
                  "description": "User-defined searchable tags",
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "type": {
                  "description": "type of the connector, this specified if the connector should be used as an input of a pipeline or an output",
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "input"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "output"
                      ]
                    }
                  ]
                },
                "updatedAt": {
                  "description": "Date/time updated",
                  "format": "date-time",
                  "type": "string"
                },
                "updatedBy": {
                  "description": "Last ID of user who made a change.",
                  "type": "string"
                }
              },
              "required": [
                "createdAt",
                "createdBy",
                "groups",
                "id",
                "name",
                "type",
                "updatedAt"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "count": {
                "description": "No. of results returned when pagination requested.",
                "type": "integer"
              },
              "lastEvaluatedToken": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "connectors"
        ]
      }
    }
  },
  "paths": {
    "/tags/{key}": {
      "get": {
        "operationId": "listTags",
        "summary": "List tag values",
        "tags": [
          "Tags"
        ],
        "description": "List tags for a given key.\n\nFor hierarchical / cascading tags, provide the `?parentValue` query string parameter.\n\nUse the `?resourceType` query string parameter to filter between `User` and `Group` resource types..\n\nPermissions:\n- `reader` and above may list tags.\n",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromValue",
            "required": false,
            "description": "Tag value to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "parentValue",
            "required": false,
            "description": "Chosen parent value for use with hierarchical tags."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "pipeline",
                "metric",
                "connector"
              ]
            },
            "in": "query",
            "name": "resourceType",
            "required": true,
            "description": "Resource type"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true,
            "description": "Tag key."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "List of tag values",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of tag values",
                  "type": "object",
                  "properties": {
                    "values": {
                      "description": "Tag values and labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "No. of results returned when pagination requested.",
                          "type": "integer"
                        },
                        "lastEvaluatedValue": {
                          "description": "Last evaluated tag value",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "values"
                  ]
                },
                "examples": {
                  "List of tag values": {
                    "summary": "Paginated list of tag values.",
                    "value": {
                      "values": [
                        {
                          "ghg protocol": "GHG Protocol",
                          "the green alliance": "The Green Alliance"
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluated": {
                          "value": "the green alliance"
                        }
                      }
                    },
                    "List of hierarchical tag values": {
                      "summary": "Paginated list of hierarchical tag values.",
                      "value": {
                        "values": [
                          {
                            "material/metal/steel": "Steel",
                            "material/metal/iron": "Iron"
                          }
                        ],
                        "pagination": {
                          "count": 2,
                          "lastEvaluated": {
                            "value": "material/metal/iron"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/pipelines": {
      "post": {
        "operationId": "create",
        "tags": [
          "Pipelines"
        ],
        "description": "Creates a new Pipeline configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newPipelineRequestBody"
              },
              "examples": {
                "New Pipeline Configuration": {
                  "summary": "Creates a new Pipeline configuration.",
                  "value": {
                    "attributes": {
                      "description": "this pipeline transforms the incomming data to include calculated",
                      "label": "Sports Arena Diesel Emissions Pipeline"
                    },
                    "description": "this is a description",
                    "name": "sportsarena:dieselemissions:pipeline",
                    "processorOptions": {
                      "chunkSize": 10
                    },
                    "transformer": {
                      "transforms": [
                        {
                          "index": 0,
                          "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 1,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 2,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 3,
                          "formula": "IN(:distance)",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "index": 0,
                          "key": "pin24",
                          "label": "pin 24",
                          "description": "some description about pin24",
                          "type": "string"
                        },
                        {
                          "index": 0,
                          "key": "distance",
                          "label": "Distance",
                          "description": "distance travelled",
                          "type": "number"
                        }
                      ]
                    },
                    "tags": {
                      "category": "A/B/C/1"
                    }
                  }
                },
                "Dry Run a new pipeline ": {
                  "summary": "Dry Run new Pipeline configuration.",
                  "value": {
                    "attributes": {
                      "description": "this pipeline transforms the incomming data to include calculated",
                      "label": "Sports Arena Diesel Emissions Pipeline"
                    },
                    "description": "this is a description",
                    "name": "sportsarena:dieselemissions:pipeline",
                    "processorOptions": {
                      "chunkSize": 10
                    },
                    "transformer": {
                      "transforms": [
                        {
                          "index": 0,
                          "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 1,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 2,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 3,
                          "formula": "IN(:distance)",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "index": 0,
                          "key": "pin24",
                          "label": "pin 24",
                          "description": "some description about pin24",
                          "type": "string"
                        },
                        {
                          "index": 0,
                          "key": "distance",
                          "label": "Distance",
                          "description": "distance travelled",
                          "type": "number"
                        }
                      ]
                    },
                    "tags": {
                      "category": "A/B/C/1"
                    },
                    "dryRunOptions": {
                      "data": [
                        "10,10"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "dryRun",
            "required": true,
            "description": "Performs a dry run of creating the pipeline which includes all the validation steps."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Successful dry run",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Successful dry run",
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "list of csv output headers",
                      "type": "array",
                      "items": {
                        "description": "output csv file headers based on specified output for calculation",
                        "type": "string"
                      }
                    },
                    "data": {
                      "description": "list of csv data items",
                      "type": "array",
                      "items": {
                        "description": "output data items based on dry run options data specified",
                        "type": "string"
                      }
                    },
                    "errors": {
                      "description": "list of errors",
                      "type": "array",
                      "items": {
                        "description": "error message",
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "headers",
                    "data"
                  ]
                },
                "examples": {
                  "Dry Run success": {
                    "summary": "New pipeline dry run performed",
                    "value": {
                      "data": [
                        "100"
                      ],
                      "headers": [
                        "sum"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/pipelineResource"
                },
                "examples": {
                  "New pipeline": {
                    "summary": "New pipeline.",
                    "value": {
                      "attributes": {
                        "description": "this pipeline transforms the incomming data to include calculated",
                        "label": "Sports Arena Diesel Emissions Pipeline"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@example.com",
                      "description": "this is a description",
                      "groups": [
                        "/"
                      ],
                      "id": "ajcuhek13ks",
                      "name": "sportsarena:dieselemissions:pipeline",
                      "processorOptions": {
                        "chunkSize": 10
                      },
                      "state": "enabled",
                      "transformer": {
                        "transforms": [
                          {
                            "index": 0,
                            "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 1,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 2,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 3,
                            "formula": "IN(:distance)",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "index": 0,
                            "key": "pin24",
                            "label": "pin 24",
                            "description": "some description about pin24",
                            "type": "string"
                          },
                          {
                            "index": 0,
                            "key": "distance",
                            "label": "Distance",
                            "description": "distance travelled",
                            "type": "number"
                          }
                        ]
                      },
                      "tags": {
                        "category": "A/B/C/1"
                      },
                      "updatedAt": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@example.com",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Dry run failure response": {
                    "summary": "Dry run has failed for a new pipeline",
                    "value": {
                      "message": "{\\\"csvData\\\":[\\\"\\\"],\\\"errorMessages\\\":[\\\"Failed processing row '[10, A]', err: Character A is neither a decimal digit number, decimal point, nor \\\\\\\"e\\\\\\\" notation exponential mark.\\\"],\\\"csvHeaders\\\":[\\\"sum\\\"]}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Lists pipelines.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Filters by `name` based on the group access of the caller."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeParentGroups",
            "required": false,
            "description": "Include all parent groups result."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeChildGroups",
            "required": false,
            "description": "Include all children groups result."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/pipelineList"
                },
                "examples": {
                  "List of pipelines": {
                    "summary": "Paginated list of pipelines.",
                    "value": {
                      "pipelines": [
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 2
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluatedToken": "ajcuhek13ks"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}": {
      "patch": {
        "operationId": "update",
        "tags": [
          "Pipelines"
        ],
        "description": "Updates an existing pipeline.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editPipelineRequestBody"
              },
              "examples": {
                "Update pipelines name and attribute": {
                  "summary": "Update pipeline",
                  "value": {
                    "name": "some-other:name",
                    "attributes": {
                      "newKey": "some new key/val pair",
                      "description": "updating existing description to something new"
                    }
                  }
                },
                "Dry Run a new pipeline ": {
                  "summary": "Dry Run existing Pipeline configuration.",
                  "value": {
                    "attributes": {
                      "description": "this pipeline transforms the incomming data to include calculated",
                      "label": "Sports Arena Diesel Emissions Pipeline"
                    },
                    "description": "this is a description",
                    "name": "sportsarena:dieselemissions:pipeline",
                    "processorOptions": {
                      "chunkSize": 10
                    },
                    "transformer": {
                      "transforms": [
                        {
                          "index": 0,
                          "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 1,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 2,
                          "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "index": 3,
                          "formula": "IN(:distance)",
                          "outputs": [
                            {
                              "index": 0,
                              "key": "vehicle",
                              "label": "Vehicle",
                              "description": "some description about pin24",
                              "type": "number"
                            }
                          ]
                        }
                      ],
                      "parameters": [
                        {
                          "index": 0,
                          "key": "pin24",
                          "label": "pin 24",
                          "description": "some description about pin24",
                          "type": "string"
                        },
                        {
                          "index": 0,
                          "key": "distance",
                          "label": "Distance",
                          "description": "distance travelled",
                          "type": "number"
                        }
                      ]
                    },
                    "tags": {
                      "category": "A/B/C/1"
                    },
                    "dryRunOptions": {
                      "data": [
                        "10,10"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "dryRun",
            "required": true,
            "description": "Performs a dry run of creating the pipeline which includes all the validation steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "pipelineId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "_aggregatedOutputKeyAndTypeMap": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "activeAt": {
                          "description": "Date/time resource is active",
                          "format": "date-time",
                          "type": "string"
                        },
                        "attributes": {
                          "description": "any non-searchable or filterable key:val attributes to specify metadata such as label, description etc.",
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "dryRunOptions": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "description": "An object with key values representing the parameters and its expected values.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "required": [
                            "data"
                          ]
                        },
                        "createdAt": {
                          "description": "Date/time created",
                          "format": "date-time",
                          "type": "string"
                        },
                        "createdBy": {
                          "description": "ID of owner.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Expanded description of the pipeline.",
                          "type": "string"
                        },
                        "groups": {
                          "description": "Groups that have access to the calculation.",
                          "type": "array",
                          "items": {
                            "description": "The group ID as managed by the Access Management module.",
                            "type": "string"
                          }
                        },
                        "id": {
                          "description": "Unique id.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Pipeline name.",
                          "type": "string"
                        },
                        "processorOptions": {
                          "type": "object",
                          "properties": {
                            "chunkSize": {
                              "description": "The size in MB to split the input file to allow parallel processing of the task. The size has to be larger than 1 MB and smaller than 5MB.",
                              "minimum": 1,
                              "maximum": 5,
                              "type": "number"
                            }
                          }
                        },
                        "connectorConfig": {
                          "type": "object",
                          "properties": {
                            "input": {
                              "description": "specifies list of input connectors,currently only 1 connector can be specified for input",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "name of the connector",
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "description": "connectors config related parameters passed down as default for the pipeline itself",
                                    "type": "object",
                                    "additionalProperties": {}
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "output": {
                              "description": "specifies list of output connectors",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "name of the connector",
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "description": "connectors config related parameters passed down as default for the pipeline itself",
                                    "type": "object",
                                    "additionalProperties": {}
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "required": [
                            "input"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "frozen",
                            "disabled"
                          ],
                          "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                        },
                        "tags": {
                          "description": "User-defined searchable tags",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "transformer": {
                          "description": "Transformer configuration of the pipeline.",
                          "type": "object",
                          "properties": {
                            "transforms": {
                              "description": "Transformations to apply to incoming data.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "index": {
                                    "description": "Index (sequence) of the transforms to apply.",
                                    "type": "number"
                                  },
                                  "formula": {
                                    "description": "Transform to apply i.e. #VEHICLE_EMISSIONS('vehicle_type', IN(:pin24)).",
                                    "type": "string"
                                  },
                                  "outputs": {
                                    "description": "Outputs as an array of output objects. Note only 1 output per transform is supported today. The array allowing multiple is a placeholder for future features.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "description": "Description explaining the output.",
                                          "type": "string"
                                        },
                                        "index": {
                                          "description": "Index (sequence) of the transform.",
                                          "type": "number"
                                        },
                                        "key": {
                                          "description": "Output unique key.",
                                          "type": "string"
                                        },
                                        "label": {
                                          "description": "Label of the output for UI display.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "string",
                                            "number",
                                            "boolean",
                                            "timestamp"
                                          ],
                                          "description": "Attribute type."
                                        },
                                        "aggregate": {
                                          "type": "string",
                                          "enum": [
                                            "groupBy",
                                            "sum",
                                            "mean",
                                            "max",
                                            "min",
                                            "count"
                                          ],
                                          "description": "Aggregate type."
                                        },
                                        "includeAsUnique": {
                                          "description": "If the user wants to uniquely identify individual activities based on specific output columns e.g. equipmentId being a unique key, then this property should be set to true for this output. When\n\t\t\t\t\t\t\t\t its set to true, the activity item will be uniquely identify by (group + date + pipelineId + [uniqueKey1 ... uniqueKey5]). Couple of things to note, this can only be set at the time of the creation of a\n\t\t\t\t\t\t\t\t new pipeline and cannot be updated for data integrity reasons. Only 5 outputs can be specified as key.\n\t\t\t\t\t\t\t\t",
                                          "type": "boolean"
                                        },
                                        "_keyMapping": {
                                          "description": "Output key offset.",
                                          "type": "string"
                                        },
                                        "metrics": {
                                          "type": "array",
                                          "items": {
                                            "description": "If set, this value will be aggregated as an input to the Metric.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "index",
                                        "key",
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "index",
                                  "formula",
                                  "outputs"
                                ]
                              }
                            },
                            "parameters": {
                              "description": "Parameters to be used as part of transformations.",
                              "type": "array",
                              "items": {
                                "description": "A parameter to be used as part of transformations.",
                                "type": "object",
                                "properties": {
                                  "index": {
                                    "description": "Index (sequence) of the input parameter.",
                                    "type": "number"
                                  },
                                  "key": {
                                    "description": "Key of the input used from within the transform. Should match one of the column headers of the input data.",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the input parameter for UI display.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Description explaining the input parameter.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "number",
                                      "boolean",
                                      "timestamp"
                                    ],
                                    "description": "Attribute type."
                                  }
                                },
                                "required": [
                                  "index",
                                  "key",
                                  "type"
                                ]
                              }
                            }
                          },
                          "required": [
                            "transforms",
                            "parameters"
                          ]
                        },
                        "updatedAt": {
                          "description": "Date/time updated",
                          "format": "date-time",
                          "type": "string"
                        },
                        "updatedBy": {
                          "description": "Last ID of user who made a change.",
                          "type": "string"
                        },
                        "version": {
                          "description": "version number of the pipeline. The pipeline version is always incremented when there is an update to the pipeline configuration itself.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "createdAt",
                        "createdBy",
                        "groups",
                        "id",
                        "name",
                        "state",
                        "transformer",
                        "version"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "headers": {
                          "description": "list of csv output headers",
                          "type": "array",
                          "items": {
                            "description": "output csv file headers based on specified output for calculation",
                            "type": "string"
                          }
                        },
                        "data": {
                          "description": "list of csv data items",
                          "type": "array",
                          "items": {
                            "description": "output data items based on dry run options data specified",
                            "type": "string"
                          }
                        },
                        "errors": {
                          "description": "list of errors",
                          "type": "array",
                          "items": {
                            "description": "error message",
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "headers",
                        "data"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Dry run failure response": {
                    "summary": "Dry run has failed for an existing pipeline",
                    "value": {
                      "message": "{\\\"csvData\\\":[\\\"\\\"],\\\"errorMessages\\\":[\\\"Failed processing row '[10, A]', err: Character A is neither a decimal digit number, decimal point, nor \\\\\\\"e\\\\\\\" notation exponential mark.\\\"],\\\"csvHeaders\\\":[\\\"sum\\\"]}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Retrieve details of an existing pipeline.",
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "verbose",
            "required": true,
            "description": "returns the resource with system specific properties. NOTE: only utilized as a backend functionality."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "pipelineId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/pipelineResource"
                },
                "examples": {
                  "Existing pipeline": {
                    "summary": "Existing pipeline details.",
                    "value": {
                      "attributes": {
                        "description": "this pipeline transforms the incomming data to include calculated",
                        "label": "Sports Arena Diesel Emissions Pipeline"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@example.com",
                      "description": "this is a description",
                      "groups": [
                        "/"
                      ],
                      "id": "ajcuhek13ks",
                      "name": "sportsarena:dieselemissions:pipeline",
                      "processorOptions": {
                        "chunkSize": 10
                      },
                      "state": "enabled",
                      "transformer": {
                        "transforms": [
                          {
                            "index": 0,
                            "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 1,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 2,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 3,
                            "formula": "IN(:distance)",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "index": 0,
                            "key": "pin24",
                            "label": "pin 24",
                            "description": "some description about pin24",
                            "type": "string"
                          },
                          {
                            "index": 0,
                            "key": "distance",
                            "label": "Distance",
                            "description": "distance travelled",
                            "type": "number"
                          }
                        ]
                      },
                      "tags": {
                        "category": "A/B/C/1"
                      },
                      "updatedAt": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@example.com",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}/versions/{version}": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Retrieve details of an existing pipeline by version",
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "verbose",
            "required": true,
            "description": "returns the resource with system specific properties. NOTE: only utilized as a backend functionality."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "pipelineId",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "path",
            "name": "version",
            "required": true,
            "description": "version number of the pipeline. The pipeline version is always incremented when there is an update to the pipeline configuration itself."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/pipelineResource"
                },
                "examples": {
                  "Existing pipeline details": {
                    "summary": "Existing pipeline details.",
                    "value": {
                      "attributes": {
                        "description": "this pipeline transforms the incomming data to include calculated",
                        "label": "Sports Arena Diesel Emissions Pipeline"
                      },
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@example.com",
                      "description": "this is a description",
                      "groups": [
                        "/"
                      ],
                      "id": "ajcuhek13ks",
                      "name": "sportsarena:dieselemissions:pipeline",
                      "processorOptions": {
                        "chunkSize": 10
                      },
                      "state": "enabled",
                      "transformer": {
                        "transforms": [
                          {
                            "index": 0,
                            "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 1,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 2,
                            "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          },
                          {
                            "index": 3,
                            "formula": "IN(:distance)",
                            "outputs": [
                              {
                                "index": 0,
                                "key": "vehicle",
                                "label": "Vehicle",
                                "description": "some description about pin24",
                                "type": "number"
                              }
                            ]
                          }
                        ],
                        "parameters": [
                          {
                            "index": 0,
                            "key": "pin24",
                            "label": "pin 24",
                            "description": "some description about pin24",
                            "type": "string"
                          },
                          {
                            "index": 0,
                            "key": "distance",
                            "label": "Distance",
                            "description": "distance travelled",
                            "type": "number"
                          }
                        ]
                      },
                      "tags": {
                        "category": "A/B/C/1"
                      },
                      "updatedAt": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@example.com",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}/versions": {
      "get": {
        "tags": [
          "Pipelines"
        ],
        "description": "Lists the versions of the pipeline",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "fromVersion",
            "required": false,
            "description": "Version to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "versionAsAt",
            "required": false,
            "description": "Filters by `asAt` or `createdAt` determine the latest resource version as that time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "pipelineId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/pipelineVersionList"
                },
                "examples": {
                  "List of pipelines": {
                    "summary": "Paginated list of pipelines.",
                    "value": {
                      "pipelines": [
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 1
                        },
                        {
                          "attributes": {
                            "description": "this pipeline transforms the incomming data to include calculated",
                            "label": "Sports Arena Diesel Emissions Pipeline"
                          },
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@example.com",
                          "description": "this is a description",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "name": "sportsarena:dieselemissions:pipeline",
                          "processorOptions": {
                            "chunkSize": 10
                          },
                          "state": "enabled",
                          "transformer": {
                            "transforms": [
                              {
                                "index": 0,
                                "formula": "LOOKUP('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 1,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 2,
                                "formula": "#VEHCILE_EMISSIONS('vehicle_type', IN(:pin24))",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              },
                              {
                                "index": 3,
                                "formula": "IN(:distance)",
                                "outputs": [
                                  {
                                    "index": 0,
                                    "key": "vehicle",
                                    "label": "Vehicle",
                                    "description": "some description about pin24",
                                    "type": "number"
                                  }
                                ]
                              }
                            ],
                            "parameters": [
                              {
                                "index": 0,
                                "key": "pin24",
                                "label": "pin 24",
                                "description": "some description about pin24",
                                "type": "string"
                              },
                              {
                                "index": 0,
                                "key": "distance",
                                "label": "Distance",
                                "description": "distance travelled",
                                "type": "number"
                              }
                            ]
                          },
                          "tags": {
                            "category": "A/B/C/1"
                          },
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@example.com",
                          "version": 2
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluatedToken": "ajcuhek13ks"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}/groups/{groupId}": {
      "put": {
        "operationId": "grant",
        "summary": "Grants access",
        "tags": [
          "Pipelines"
        ],
        "description": "Grants access of the pipeline to the provided group.\n\n\t\t\tPermissions:\n\t\t\t- `admin` and above of both the active group in context and the target group required.\n\t\t\t",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "revoke",
        "summary": "Revoke access",
        "tags": [
          "Pipelines"
        ],
        "description": "Revokes access of the pipeline to the provided group.\n\nPermissions:\n- `admin` and above of both the active group in context and the target group required.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "post": {
        "operationId": "createMetric",
        "tags": [
          "Metrics"
        ],
        "description": "Creates a new Metric. The metric name should be unique per hierarchy e.g. if a metric with name \"a\" is created at \"/usa\" and creating a metric with the same name \"a\" at \"/usa/*\" wont be allowed.  ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newMetricRequestBody"
              },
              "examples": {
                "New Metric": {
                  "summary": "Creates a new Metric.",
                  "value": {
                    "name": "ghg:scope1:stationary_combustion:co2",
                    "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                    "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                    "aggregationType": "sum",
                    "tags": {
                      "dataSource": "GHG",
                      "scope": "1",
                      "category": "Stationary Combustion",
                      "subCategory": "CO2"
                    },
                    "attributes": {
                      "label": "Sports Arena Diesel Emissions Metric"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricResource"
                },
                "examples": {
                  "New metric": {
                    "summary": "New metric.",
                    "value": {
                      "id": "ajcuhek13ks",
                      "name": "ghg:scope1:stationary_combustion:co2",
                      "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                      "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                      "aggregationType": "sum",
                      "tags": {
                        "dataSource": "GHG",
                        "scope": "1",
                        "category": "Stationary Combustion",
                        "subCategory": "CO2"
                      },
                      "state": "enabled",
                      "attributes": {
                        "label": "Sports Arena Diesel Emissions Metric"
                      },
                      "groups": [
                        "/usa/co"
                      ],
                      "version": 1,
                      "createdAt": "someone@somewhere.com",
                      "createdBy": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-10T23:55:20.322Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "501": {
            "description": "Not implemented.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not implemented.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listMetrics",
        "tags": [
          "Metrics"
        ],
        "description": "Lists metrics.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Filters by `name` based on the group access of the caller."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeParentGroups",
            "required": false,
            "description": "Include all parent groups result."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeChildGroups",
            "required": false,
            "description": "Include all children groups result."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricList"
                },
                "examples": {
                  "List of metrics": {
                    "summary": "Paginated list of metrics.",
                    "value": {
                      "metrics": [
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:ch4",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 2,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluatedToken": "ajcuhek13ks"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metricId}": {
      "patch": {
        "operationId": "updateMetric",
        "tags": [
          "Metrics"
        ],
        "description": "Updates an existing metric.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editMetricRequestBody"
              },
              "examples": {
                "Update metrics name and attribute": {
                  "summary": "Update metric",
                  "value": {
                    "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                    "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                    "aggregationType": "sum",
                    "tags": {
                      "dataSource": "GHG",
                      "scope": "1",
                      "category": "Stationary Combustion",
                      "subCategory": "CO2"
                    },
                    "state": "enabled",
                    "attributes": {
                      "label": "Sports Arena Diesel Emissions Metric"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "metricId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Metrics"
        ],
        "description": "Retrieve details of an existing metric.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "metricId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricResource"
                },
                "examples": {
                  "Existing metric": {
                    "summary": "Existing metric details.",
                    "value": {
                      "id": "ajcuhek13ks",
                      "name": "ghg:scope1:stationary_combustion:co2",
                      "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                      "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                      "aggregationType": "sum",
                      "tags": {
                        "dataSource": "GHG",
                        "scope": "1",
                        "category": "Stationary Combustion",
                        "subCategory": "CO2"
                      },
                      "state": "enabled",
                      "attributes": {
                        "label": "Sports Arena Diesel Emissions Metric"
                      },
                      "groups": [
                        "/usa/co"
                      ],
                      "version": 1,
                      "createdAt": "someone@somewhere.com",
                      "createdBy": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-10T23:55:20.322Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metricId}/versions/{version}": {
      "get": {
        "operationId": "getMetric",
        "tags": [
          "Metrics"
        ],
        "description": "Retrieve details of an existing metric by version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "metricId",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "path",
            "name": "version",
            "required": true,
            "description": "version number of the Metric. The Metric version is incremented whenever there is an update to the Metric."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricResource"
                },
                "examples": {
                  "Existing metric details": {
                    "summary": "Existing metric details.",
                    "value": {
                      "id": "ajcuhek13ks",
                      "name": "ghg:scope1:stationary_combustion:co2",
                      "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                      "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                      "aggregationType": "sum",
                      "tags": {
                        "dataSource": "GHG",
                        "scope": "1",
                        "category": "Stationary Combustion",
                        "subCategory": "CO2"
                      },
                      "state": "enabled",
                      "attributes": {
                        "label": "Sports Arena Diesel Emissions Metric"
                      },
                      "groups": [
                        "/usa/co"
                      ],
                      "version": 1,
                      "createdAt": "someone@somewhere.com",
                      "createdBy": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-10T23:55:20.322Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metricId}/versions": {
      "get": {
        "operationId": "listMetricVersions",
        "tags": [
          "Metrics"
        ],
        "description": "Lists the versions of the metric",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "fromVersion",
            "required": false,
            "description": "Version to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "metricId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/metricList"
                },
                "examples": {
                  "List of metrics": {
                    "summary": "Paginated list of metrics.",
                    "value": {
                      "metrics": [
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:ch4",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 1,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        },
                        {
                          "id": "ajcuhek13ks",
                          "name": "ghg:scope1:stationary_combustion:co2",
                          "summary": "GHG Scope 1 (Stationary Combustion) - CO2",
                          "description": "GHG Scope 1 (Stationary Combustion) - CO2 Metric",
                          "aggregationType": "sum",
                          "tags": {
                            "dataSource": "GHG",
                            "scope": "1",
                            "category": "Stationary Combustion",
                            "subCategory": "CO2"
                          },
                          "state": "enabled",
                          "attributes": {
                            "label": "Sports Arena Diesel Emissions Metric"
                          },
                          "groups": [
                            "/usa/co"
                          ],
                          "version": 2,
                          "createdAt": "someone@somewhere.com",
                          "createdBy": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-10T23:55:20.322Z"
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluatedToken": "ajcuhek13ks"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{id}/groups/{groupId}": {
      "put": {
        "operationId": "grantMetrics",
        "summary": "Grants access",
        "tags": [
          "Metrics"
        ],
        "description": "Grants access of the metric to the provided group.\n\n\t\t\tPermissions:\n\t\t\t- `admin` and above of both the active group in context and the target group required.\n\t\t\t",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "revokeMetric",
        "summary": "Revoke access",
        "tags": [
          "Metrics"
        ],
        "description": "Revokes access of the metric to the provided group.\n\nPermissions:\n- `admin` and above of both the active group in context and the target group required.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/connectors": {
      "post": {
        "operationId": "create",
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Creates a new Pipeline Connector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connectorCreateParams"
              },
              "examples": {
                "New Pipeline connector Configuration": {
                  "summary": "Creates a new Pipeline connector configuration.",
                  "value": {
                    "description": "this connector transforms a csv pipeline input as a file upload into SIF compatible pipeline format",
                    "requiresFileUpload": true,
                    "name": "sif-csv-pipeline-input-connector",
                    "parameters": [
                      {
                        "name": "apiKey",
                        "description": "some api key which my connector will need to utilize",
                        "required": true
                      },
                      {
                        "name": "endpoint",
                        "description": "some endpoint which my connector will need to utilize",
                        "required": true,
                        "defaultValue": "https://...."
                      }
                    ],
                    "type": "input"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "202": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/connector"
                },
                "examples": {
                  "New connector": {
                    "summary": "New pipeline connector response",
                    "value": {
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "description": "this connector transforms a csv pipeline input as a file upload into SIF compatible pipeline format",
                      "groups": [
                        "/"
                      ],
                      "id": "ajcuhek13ks",
                      "isManaged": true,
                      "name": "sif-csv-pipeline-input-connector",
                      "parameters": [
                        {
                          "name": "apiKey",
                          "description": "some api key which my connector will need to utilize",
                          "required": true
                        },
                        {
                          "name": "endpoint",
                          "description": "some endpoint which my connector will need to utilize",
                          "required": true,
                          "defaultValue": "https://...."
                        }
                      ],
                      "requiresFileUpload": true,
                      "type": "input",
                      "updatedAt": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Lists connectors.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Filters by `name` based on the group access of the caller."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeParentGroups",
            "required": false,
            "description": "Include all parent groups result."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeChildGroups",
            "required": false,
            "description": "Include all children groups result."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/connectorList"
                },
                "examples": {
                  "List of connectors": {
                    "summary": "Paginated list of connectors.",
                    "value": {
                      "connectors": [
                        {
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "description": "this connector transforms a csv pipeline input as a file upload into SIF compatible pipeline format",
                          "groups": [
                            "/"
                          ],
                          "id": "ajcuhek13ks",
                          "isManaged": true,
                          "name": "sif-csv-pipeline-input-connector",
                          "parameters": [
                            {
                              "name": "apiKey",
                              "description": "some api key which my connector will need to utilize",
                              "required": true
                            },
                            {
                              "name": "endpoint",
                              "description": "some endpoint which my connector will need to utilize",
                              "required": true,
                              "defaultValue": "https://...."
                            }
                          ],
                          "requiresFileUpload": true,
                          "type": "input",
                          "updatedAt": "2022-08-10T23:55:20.322Z",
                          "updatedBy": "someone@somewhere.com"
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluatedToken": "ajcuhek13ks"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connectors/{connectorId}": {
      "get": {
        "tags": [
          "Pipeline connectors"
        ],
        "description": "Retrieve details of an existing connector.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "connectorId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/connector"
                },
                "examples": {
                  "Existing connector": {
                    "summary": "Existing connector details.",
                    "value": {
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "description": "this connector transforms a csv pipeline input as a file upload into SIF compatible pipeline format",
                      "groups": [
                        "/"
                      ],
                      "id": "ajcuhek13ks",
                      "isManaged": true,
                      "name": "sif-csv-pipeline-input-connector",
                      "parameters": [
                        {
                          "name": "apiKey",
                          "description": "some api key which my connector will need to utilize",
                          "required": true
                        },
                        {
                          "name": "endpoint",
                          "description": "some endpoint which my connector will need to utilize",
                          "required": true,
                          "defaultValue": "https://...."
                        }
                      ],
                      "requiresFileUpload": true,
                      "type": "input",
                      "updatedAt": "2022-08-10T23:55:20.322Z",
                      "updatedBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update",
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Updates an existing connector.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connectorUpdateParams"
              },
              "examples": {
                "Update Connector name and parameters": {
                  "summary": "Update Connector",
                  "value": {
                    "name": "some-new-name",
                    "parameters": [
                      {
                        "name": "apiKey",
                        "description": "some api key which my connector will need to utilize",
                        "required": true
                      },
                      {
                        "name": "endpoint",
                        "description": "some endpoint which my connector will need to utilize",
                        "required": true,
                        "defaultValue": "https://...."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "connectorId",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "$ref": "#/components/schemas/connector"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/connectors/{id}/groups/{groupId}": {
      "put": {
        "operationId": "grant",
        "summary": "Grants access",
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Grants access of the connector to the provided group.\n\n\t\t\tPermissions:\n\t\t\t- `admin` and above of both the active group in context and the target group required.\n\t\t\t",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "revoke",
        "summary": "Revoke access",
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Revokes access of the Connector to the provided group.\n\nPermissions:\n- `admin` and above of both the active group in context and the target group required.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{id}": {
      "delete": {
        "operationId": "deleteMetric",
        "tags": [
          "Metrics"
        ],
        "description": "Delete metric (CAUTION: Will delete all the versions as well).\n\nPermissions:\n- Only `Admin` may delete metric.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/connectors/{id}": {
      "delete": {
        "tags": [
          "Pipeline Connectors"
        ],
        "description": "Delete connector\n\nPermissions:\n- Only `Admin` may delete reference connector.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/pipelines/{id}": {
      "delete": {
        "tags": [
          "Pipelines"
        ],
        "description": "Delete pipeline (CAUTION: Will delete all the versions as well)\n\nPermissions:\n- Only `Admin` may delete reference pipeline.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Pipelines",
      "description": "Pipeline management"
    }
  ]
}