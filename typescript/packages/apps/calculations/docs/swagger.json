{
  "openapi": "3.0.3",
  "info": {
    "title": "SIF SaaS: Calculations API",
    "description": "\nHas accountability for:\n- Managing custom defined calculations\n",
    "version": "0.0.1"
  },
  "components": {
    "securitySchemes": {
      "platformUserPool": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "calculationParameter": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Position of the parameter to be input within the list of parameters provided. Must be unique and in sequence.",
            "type": "integer"
          },
          "key": {
            "description": "Unique key referencing the parameter. Within the `formula` definition the parameter values are referenced as `:<key>`.",
            "type": "string"
          },
          "label": {
            "description": "Human friendly label representing the parameter.",
            "type": "string"
          },
          "description": {
            "description": "Describes the purpose of the parameter.",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "boolean"
            ],
            "description": "Data type of the parameter."
          }
        },
        "required": [
          "index",
          "key",
          "description",
          "type"
        ]
      },
      "calculationParameters": {
        "description": "List of parameters required by the formula.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "index": {
              "description": "Position of the parameter to be input within the list of parameters provided. Must be unique and in sequence.",
              "type": "integer"
            },
            "key": {
              "description": "Unique key referencing the parameter. Within the `formula` definition the parameter values are referenced as `:<key>`.",
              "type": "string"
            },
            "label": {
              "description": "Human friendly label representing the parameter.",
              "type": "string"
            },
            "description": {
              "description": "Describes the purpose of the parameter.",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "string",
                "number",
                "boolean"
              ],
              "description": "Data type of the parameter."
            }
          },
          "required": [
            "index",
            "key",
            "description",
            "type"
          ]
        }
      },
      "calculationOutput": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Unique name of output. Only required for formulas producing multiple outputs.",
            "type": "string"
          },
          "description": {
            "description": "Describes the output generated by the calculation.",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "boolean"
            ],
            "description": "Data type of the output."
          }
        },
        "required": [
          "name",
          "description",
          "type"
        ]
      },
      "calculationOutputs": {
        "description": "List of outputs produced by the formula.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Unique name of output. Only required for formulas producing multiple outputs.",
              "type": "string"
            },
            "description": {
              "description": "Describes the output generated by the calculation.",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "string",
                "number",
                "boolean"
              ],
              "description": "Data type of the output."
            }
          },
          "required": [
            "name",
            "description",
            "type"
          ]
        }
      },
      "tags": {
        "description": "User-defined searchable tags",
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "newCalculationRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of calculation. How the calculation is referenced from within a transform.",
            "type": "string"
          },
          "summary": {
            "description": "Concise summary of the calculation.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the calculation.",
            "type": "string"
          },
          "formula": {
            "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/calculationParameters"
          },
          "outputs": {
            "$ref": "#/components/schemas/calculationOutputs"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "summary",
          "formula",
          "outputs"
        ]
      },
      "editCalculationRequestBody": {
        "type": "object",
        "properties": {
          "summary": {
            "description": "Concise summary of the calculation.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the calculation.",
            "type": "string"
          },
          "formula": {
            "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/calculationParameters"
          },
          "outputs": {
            "$ref": "#/components/schemas/calculationOutputs"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          },
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "calculationResource": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique id.",
            "type": "string"
          },
          "name": {
            "description": "Name of calculation. How the calculation is referenced from within a transform.",
            "type": "string"
          },
          "summary": {
            "description": "Concise summary of the calculation.",
            "type": "string"
          },
          "description": {
            "description": "Expanded description of the calculation.",
            "type": "string"
          },
          "formula": {
            "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/calculationParameters"
          },
          "outputs": {
            "description": "List of outputs produced by the formula.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Unique name of output. Only required for formulas producing multiple outputs.",
                  "type": "string"
                },
                "description": {
                  "description": "Describes the output generated by the calculation.",
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "number",
                    "boolean"
                  ],
                  "description": "Data type of the output."
                }
              },
              "required": [
                "name",
                "description",
                "type"
              ]
            }
          },
          "version": {
            "description": "Version of the calculation.",
            "type": "integer"
          },
          "state": {
            "type": "string",
            "enum": [
              "enabled",
              "frozen",
              "disabled"
            ],
            "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
          },
          "groups": {
            "description": "Groups that have access to the calculation.",
            "type": "array",
            "items": {
              "description": "The group ID as managed by the Access Management module.",
              "type": "string"
            }
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "createdBy": {
            "description": "ID of owner.",
            "type": "string"
          },
          "createdAt": {
            "description": "Date/time created",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "description": "Last ID of user who made a change.",
            "type": "string"
          },
          "updatedAt": {
            "description": "Date/time updated",
            "format": "date-time",
            "type": "string"
          },
          "activeAt": {
            "description": "Date/time resource is active",
            "format": "date-time",
            "type": "string"
          },
          "dryRunOptions": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "An object with key values representing the parameters and its expected values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "data"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "summary",
          "formula",
          "outputs",
          "version",
          "state",
          "groups",
          "createdBy",
          "createdAt"
        ]
      },
      "calculationsList": {
        "type": "object",
        "properties": {
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calculationResource"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "lastEvaluatedToken": {
                "description": "Token used to paginate to the next page of search result.",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "calculations"
        ]
      },
      "calculationsVersionList": {
        "type": "object",
        "properties": {
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/calculationResource"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "lastEvaluatedVersion": {
                "description": "Version of the calculation.",
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "calculations"
        ]
      }
    }
  },
  "paths": {
    "/calculations": {
      "post": {
        "operationId": "create",
        "summary": "Define a new calculation",
        "tags": [
          "Calculations"
        ],
        "description": "Define a new custom calculation that can be referenced in transforms by prefixing its name with `#`.\n\nPermissions:\n- Only `admin` and above may create new calculations.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newCalculationRequestBody"
              },
              "examples": {
                "New calculation": {
                  "summary": "Define the calculation `#vehicle_emissions(<vehicle_type>,<pollutant>,<distance>,<passengers>)`,",
                  "value": {
                    "name": "vehicle_emissions",
                    "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                    "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                    "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                    "parameters": [
                      {
                        "index": 0,
                        "key": "vehicleType",
                        "label": "Vehicle Type",
                        "description": "Type of vehicle",
                        "type": "string"
                      },
                      {
                        "index": 1,
                        "key": "pollutant",
                        "label": "CO2eq pollutant",
                        "description": "The CO2eq pollutant to lookup from the emission factor",
                        "type": "string"
                      },
                      {
                        "index": 2,
                        "key": "distance",
                        "label": "Distance (Miles)",
                        "description": "Distance (in miles)",
                        "type": "number"
                      },
                      {
                        "index": 3,
                        "key": "passengers",
                        "label": "Passengers",
                        "description": "No. of passengers",
                        "type": "number"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "result",
                        "description": "The calculated CO2eq pollutant.",
                        "type": "number"
                      }
                    ],
                    "tags": {
                      "datasource": "GHG Protocol",
                      "type": "material/metal/steel"
                    }
                  }
                },
                "executing a dry run": {
                  "summary": "executing a dry run for a new pipeline",
                  "value": {
                    "name": "vehicle_emissions",
                    "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                    "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                    "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                    "parameters": [
                      {
                        "index": 0,
                        "key": "vehicleType",
                        "label": "Vehicle Type",
                        "description": "Type of vehicle",
                        "type": "string"
                      },
                      {
                        "index": 1,
                        "key": "pollutant",
                        "label": "CO2eq pollutant",
                        "description": "The CO2eq pollutant to lookup from the emission factor",
                        "type": "string"
                      },
                      {
                        "index": 2,
                        "key": "distance",
                        "label": "Distance (Miles)",
                        "description": "Distance (in miles)",
                        "type": "number"
                      },
                      {
                        "index": 3,
                        "key": "passengers",
                        "label": "Passengers",
                        "description": "No. of passengers",
                        "type": "number"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "result",
                        "description": "The calculated CO2eq pollutant.",
                        "type": "number"
                      }
                    ],
                    "tags": {
                      "datasource": "GHG Protocol",
                      "type": "material/metal/steel"
                    },
                    "dryRunOptions": {
                      "data": [
                        "10,10"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "dryRun",
            "required": true,
            "description": "Performs a dry run of creating the calculation which includes all the validation steps."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Successful dry run",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Successful dry run",
                  "type": "object",
                  "properties": {
                    "headers": {
                      "description": "list of csv output headers",
                      "type": "array",
                      "items": {
                        "description": "output csv file headers based on specified output for calculation",
                        "type": "string"
                      }
                    },
                    "data": {
                      "description": "list of csv data items",
                      "type": "array",
                      "items": {
                        "description": "output data items based on dry run options data specified",
                        "type": "string"
                      }
                    },
                    "errors": {
                      "description": "list of errors",
                      "type": "array",
                      "items": {
                        "description": "error message",
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "headers",
                    "data"
                  ]
                },
                "examples": {
                  "Dry Run": {
                    "summary": "New calculation dry run performed",
                    "value": {
                      "csvData": [
                        "100"
                      ],
                      "csvHeaders": [
                        "sum"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique id.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of calculation. How the calculation is referenced from within a transform.",
                      "type": "string"
                    },
                    "summary": {
                      "description": "Concise summary of the calculation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Expanded description of the calculation.",
                      "type": "string"
                    },
                    "formula": {
                      "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
                      "type": "string"
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/calculationParameters"
                    },
                    "outputs": {
                      "description": "List of outputs produced by the formula.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Unique name of output. Only required for formulas producing multiple outputs.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Describes the output generated by the calculation.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean"
                            ],
                            "description": "Data type of the output."
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "type"
                        ]
                      }
                    },
                    "version": {
                      "description": "Version of the calculation.",
                      "type": "integer"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "enabled",
                        "frozen",
                        "disabled"
                      ],
                      "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                    },
                    "groups": {
                      "description": "Groups that have access to the calculation.",
                      "type": "array",
                      "items": {
                        "description": "The group ID as managed by the Access Management module.",
                        "type": "string"
                      }
                    },
                    "tags": {
                      "$ref": "#/components/schemas/tags"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "activeAt": {
                      "description": "Date/time resource is active",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dryRunOptions": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "description": "An object with key values representing the parameters and its expected values.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "summary",
                    "formula",
                    "outputs",
                    "version",
                    "state",
                    "groups",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "New calculation": {
                    "summary": "New calculation created successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "vehicle_emissions",
                      "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                      "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                      "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                      "parameters": [
                        {
                          "index": 0,
                          "key": "vehicleType",
                          "label": "Vehicle Type",
                          "description": "Type of vehicle",
                          "type": "string"
                        },
                        {
                          "index": 1,
                          "key": "pollutant",
                          "label": "CO2eq pollutant",
                          "description": "The CO2eq pollutant to lookup from the emission factor",
                          "type": "string"
                        },
                        {
                          "index": 2,
                          "key": "distance",
                          "label": "Distance (Miles)",
                          "description": "Distance (in miles)",
                          "type": "number"
                        },
                        {
                          "index": 3,
                          "key": "passengers",
                          "label": "Passengers",
                          "description": "No. of passengers",
                          "type": "number"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "result",
                          "description": "The calculated CO2eq pollutant.",
                          "type": "number"
                        }
                      ],
                      "tags": {
                        "datasource": "GHG Protocol",
                        "type": "material/metal/steel"
                      },
                      "version": 1,
                      "groups": [
                        "/usa/northwest"
                      ],
                      "state": "enabled",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Malformed equation": {
                    "summary": "Provided formula is malformed.",
                    "value": {
                      "description": "Malformed formula. Expected `)` at line 1 column 15."
                    }
                  },
                  "Unused parameter": {
                    "summary": "A specified parameter is unused.",
                    "value": {
                      "description": "Parameter `distance` is specified but not referenced within the formula."
                    }
                  },
                  "Missing parameter definition": {
                    "summary": "Missing parameter.",
                    "value": {
                      "description": "Parameter `distance` is referenced within the formula but not defined."
                    }
                  },
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  },
                  "Failed Dry Run": {
                    "summary": "failed dry run response",
                    "value": {
                      "description": "{\\\"data\\\":[\\\"\\\"],\\\"errors\\\":[\\\"Failed processing row '[10, A]', err: Character A is neither a decimal digit number, decimal point, nor \\\\\\\"e\\\\\\\" notation exponential mark.\\\"],\\\"headers\\\":[\\\"sum\\\"]}"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use within the specified `groups`.",
                    "value": {
                      "description": "Name `vehicle_emissions` already exists within group `/usa/northwest`."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list",
        "summary": "List all calculations.",
        "tags": [
          "Calculations"
        ],
        "description": "List the latest versions of calculations.\n\nPermissions:\n- `readers` of the group in context may list calculations.\n",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromToken",
            "required": false,
            "description": "Token used to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "required": false,
            "description": "Filters by `name` based on the group access of the caller."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "description": "Tag key and value in the format of `key:value`.",
                "type": "string"
              }
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Tag keys and values to filter by."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeParentGroups",
            "required": false,
            "description": "Include all parent groups result."
          },
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "includeChildGroups",
            "required": false,
            "description": "Include all children groups result."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "calculations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/calculationResource"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "lastEvaluatedToken": {
                          "description": "Token used to paginate to the next page of search result.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "calculations"
                  ]
                },
                "examples": {
                  "List of calculations": {
                    "summary": "Paginated list of calculations.",
                    "value": {
                      "calculations": [
                        {
                          "id": "03d66e78d",
                          "name": "vehicle_emissions",
                          "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                          "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                          "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                          "parameters": [
                            {
                              "index": 0,
                              "key": "vehicleType",
                              "label": "Vehicle Type",
                              "description": "Type of vehicle",
                              "type": "string"
                            },
                            {
                              "index": 1,
                              "key": "pollutant",
                              "label": "CO2eq pollutant",
                              "description": "The CO2eq pollutant to lookup from the emission factor",
                              "type": "string"
                            },
                            {
                              "index": 2,
                              "key": "distance",
                              "label": "Distance (Miles)",
                              "description": "Distance (in miles)",
                              "type": "number"
                            },
                            {
                              "index": 3,
                              "key": "passengers",
                              "label": "Passengers",
                              "description": "No. of passengers",
                              "type": "number"
                            }
                          ],
                          "outputs": [
                            {
                              "name": "result",
                              "description": "The calculated CO2eq pollutant.",
                              "type": "number"
                            }
                          ],
                          "tags": {
                            "datasource": "GHG Protocol",
                            "type": "material/metal/steel"
                          },
                          "version": 1,
                          "groups": [
                            "/usa/northwest"
                          ],
                          "state": "enabled",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com"
                        }
                      ],
                      "pagination": {
                        "lastEvaluatedToken": "03d66e78d"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calculations/{id}": {
      "patch": {
        "operationId": "update",
        "summary": "Update a calculation.",
        "tags": [
          "Calculations"
        ],
        "description": "\nUpdates an existing calculation by creating a new version of it. This latest version becomes the current version.\n\nIf the calculation is to be frozen to prevent from being used as part of any new transforms then set the `state` to `frozen`. This will still allow existing transforms to use the calculation.\n\nIf the calculation needs to be prevented from being used in any transform, pre-existing or not, then set the `state` to 'disabled'.\n\nPermissions:\n- Only `admins` of the group in context may update calculations.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editCalculationRequestBody"
              },
              "examples": {
                "Update calculation": {
                  "summary": "Update an existing calculation.",
                  "value": {
                    "name": "vehicle_emissions",
                    "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                    "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                    "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                    "parameters": [
                      {
                        "index": 0,
                        "key": "vehicleType",
                        "label": "Vehicle Type",
                        "description": "Type of vehicle",
                        "type": "string"
                      },
                      {
                        "index": 1,
                        "key": "pollutant",
                        "label": "CO2eq pollutant",
                        "description": "The CO2eq pollutant to lookup from the emission factor",
                        "type": "string"
                      },
                      {
                        "index": 2,
                        "key": "distance",
                        "label": "Distance (Miles)",
                        "description": "Distance (in miles)",
                        "type": "number"
                      },
                      {
                        "index": 3,
                        "key": "passengers",
                        "label": "Passengers",
                        "description": "No. of passengers",
                        "type": "number"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "result",
                        "description": "The calculated CO2eq pollutant.",
                        "type": "number"
                      }
                    ],
                    "tags": {
                      "datasource": "GHG Protocol",
                      "type": "material/metal/steel"
                    }
                  }
                },
                "Changing tags": {
                  "summary": "Changing the tags of a calculation.",
                  "value": {
                    "tags": {
                      "datasource": "GHG Protocol",
                      "type": "material/metal/iron"
                    }
                  }
                },
                "executing a dry run": {
                  "summary": "executing a dry run for an existing pipeline",
                  "value": {
                    "name": "vehicle_emissions",
                    "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                    "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                    "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                    "parameters": [
                      {
                        "index": 0,
                        "key": "vehicleType",
                        "label": "Vehicle Type",
                        "description": "Type of vehicle",
                        "type": "string"
                      },
                      {
                        "index": 1,
                        "key": "pollutant",
                        "label": "CO2eq pollutant",
                        "description": "The CO2eq pollutant to lookup from the emission factor",
                        "type": "string"
                      },
                      {
                        "index": 2,
                        "key": "distance",
                        "label": "Distance (Miles)",
                        "description": "Distance (in miles)",
                        "type": "number"
                      },
                      {
                        "index": 3,
                        "key": "passengers",
                        "label": "Passengers",
                        "description": "No. of passengers",
                        "type": "number"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "result",
                        "description": "The calculated CO2eq pollutant.",
                        "type": "number"
                      }
                    ],
                    "tags": {
                      "datasource": "GHG Protocol",
                      "type": "material/metal/steel"
                    },
                    "dryRunOptions": {
                      "data": [
                        "10,10"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "in": "query",
            "name": "dryRun",
            "required": true,
            "description": "Performs a dry run of creating the calculation which includes all the validation steps."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "the response can be a calculation resource or dry run result.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "the response can be a calculation resource or dry run result.",
                  "type": "object",
                  "additionalProperties": {}
                },
                "examples": {
                  "Existing calculation updated successfully": {
                    "summary": "New version of an existing calculation created successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "vehicle_emissions",
                      "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                      "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                      "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                      "parameters": [
                        {
                          "index": 0,
                          "key": "vehicleType",
                          "label": "Vehicle Type",
                          "description": "Type of vehicle",
                          "type": "string"
                        },
                        {
                          "index": 1,
                          "key": "pollutant",
                          "label": "CO2eq pollutant",
                          "description": "The CO2eq pollutant to lookup from the emission factor",
                          "type": "string"
                        },
                        {
                          "index": 2,
                          "key": "distance",
                          "label": "Distance (Miles)",
                          "description": "Distance (in miles)",
                          "type": "number"
                        },
                        {
                          "index": 3,
                          "key": "passengers",
                          "label": "Passengers",
                          "description": "No. of passengers",
                          "type": "number"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "result",
                          "description": "The calculated CO2eq pollutant.",
                          "type": "number"
                        }
                      ],
                      "tags": {
                        "datasource": "GHG Protocol",
                        "type": "material/metal/steel"
                      },
                      "version": 2,
                      "groups": [
                        "/usa/northwest"
                      ],
                      "state": "enabled",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com"
                    }
                  },
                  "Successful Dry run of a calculation update": {
                    "summary": "a dry run has been perform which returned a success response",
                    "value": {
                      "csvData": [
                        "100"
                      ],
                      "csvHeaders": [
                        "sum"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Bad request.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Malformed equation": {
                    "summary": "Provided formula is malformed.",
                    "value": {
                      "description": "Malformed formula. Expected `)` at line 1 column 15."
                    }
                  },
                  "Unused parameter": {
                    "summary": "A specified parameter is unused.",
                    "value": {
                      "description": "Parameter `distance` is specified but not referenced within the formula."
                    }
                  },
                  "Missing parameter definition": {
                    "summary": "Missing parameter.",
                    "value": {
                      "description": "Parameter `distance` is referenced within the formula but not defined."
                    }
                  },
                  "Invalid request": {
                    "summary": "Invalid request.",
                    "value": {
                      "description": "Expected `formula` to be defined but not provided."
                    }
                  },
                  "Failed Dry Run": {
                    "summary": "failed dry run response",
                    "value": {
                      "description": "{\\\"data\\\":[\\\"\\\"],\\\"errors\\\":[\\\"Failed processing row '[10, A]', err: Character A is neither a decimal digit number, decimal point, nor \\\\\\\"e\\\\\\\" notation exponential mark.\\\"],\\\"headers\\\":[\\\"sum\\\"]}"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Conflict.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "syntaxErrors": {
                      "type": "object",
                      "properties": {
                        "charPositionInLine": {
                          "type": "integer"
                        },
                        "line": {
                          "type": "integer"
                        },
                        "msg": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "charPositionInLine",
                        "line",
                        "msg"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "Name in use": {
                    "summary": "The `name` is already in use within the specified `groups`.",
                    "value": {
                      "description": "Name `vehicle_emissions` already exists within group `/usa/northwest`."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get",
        "summary": "Retrieve a calculation.",
        "tags": [
          "Calculations"
        ],
        "description": "Retrieve the details of the latest version of a calculation.\n\nPermissions:\n- Only `reader` and above may view calculations.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique id.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of calculation. How the calculation is referenced from within a transform.",
                      "type": "string"
                    },
                    "summary": {
                      "description": "Concise summary of the calculation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Expanded description of the calculation.",
                      "type": "string"
                    },
                    "formula": {
                      "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
                      "type": "string"
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/calculationParameters"
                    },
                    "outputs": {
                      "description": "List of outputs produced by the formula.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Unique name of output. Only required for formulas producing multiple outputs.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Describes the output generated by the calculation.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean"
                            ],
                            "description": "Data type of the output."
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "type"
                        ]
                      }
                    },
                    "version": {
                      "description": "Version of the calculation.",
                      "type": "integer"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "enabled",
                        "frozen",
                        "disabled"
                      ],
                      "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                    },
                    "groups": {
                      "description": "Groups that have access to the calculation.",
                      "type": "array",
                      "items": {
                        "description": "The group ID as managed by the Access Management module.",
                        "type": "string"
                      }
                    },
                    "tags": {
                      "$ref": "#/components/schemas/tags"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "activeAt": {
                      "description": "Date/time resource is active",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dryRunOptions": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "description": "An object with key values representing the parameters and its expected values.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "summary",
                    "formula",
                    "outputs",
                    "version",
                    "state",
                    "groups",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing calculation": {
                    "summary": "Calculation retrieved successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "vehicle_emissions",
                      "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                      "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                      "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                      "parameters": [
                        {
                          "index": 0,
                          "key": "vehicleType",
                          "label": "Vehicle Type",
                          "description": "Type of vehicle",
                          "type": "string"
                        },
                        {
                          "index": 1,
                          "key": "pollutant",
                          "label": "CO2eq pollutant",
                          "description": "The CO2eq pollutant to lookup from the emission factor",
                          "type": "string"
                        },
                        {
                          "index": 2,
                          "key": "distance",
                          "label": "Distance (Miles)",
                          "description": "Distance (in miles)",
                          "type": "number"
                        },
                        {
                          "index": 3,
                          "key": "passengers",
                          "label": "Passengers",
                          "description": "No. of passengers",
                          "type": "number"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "result",
                          "description": "The calculated CO2eq pollutant.",
                          "type": "number"
                        }
                      ],
                      "tags": {
                        "datasource": "GHG Protocol",
                        "type": "material/metal/steel"
                      },
                      "version": 1,
                      "groups": [
                        "/usa/northwest"
                      ],
                      "state": "enabled",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete",
        "summary": "Deletes a calculation.",
        "tags": [
          "Calculations"
        ],
        "description": "Deletes a calculation.\n\nPermissions:\n- Only `admin` and above may view calculations.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/calculations/{id}/versions/{version}": {
      "get": {
        "operationId": "getVersion",
        "summary": "Retrieve specific version.",
        "tags": [
          "Calculations"
        ],
        "description": "Retrieve the details of a specific version of a calculation.\n\nPermissions:\n- Only `readers` of the group in context may view a version of a calculation.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "version",
            "required": true,
            "description": "Version of the calculation."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique id.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of calculation. How the calculation is referenced from within a transform.",
                      "type": "string"
                    },
                    "summary": {
                      "description": "Concise summary of the calculation.",
                      "type": "string"
                    },
                    "description": {
                      "description": "Expanded description of the calculation.",
                      "type": "string"
                    },
                    "formula": {
                      "description": "the actual formula representing the calculation. Parameter values are referenced by prefixing the parameter key with `:`.",
                      "type": "string"
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/calculationParameters"
                    },
                    "outputs": {
                      "description": "List of outputs produced by the formula.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Unique name of output. Only required for formulas producing multiple outputs.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Describes the output generated by the calculation.",
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean"
                            ],
                            "description": "Data type of the output."
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "type"
                        ]
                      }
                    },
                    "version": {
                      "description": "Version of the calculation.",
                      "type": "integer"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "enabled",
                        "frozen",
                        "disabled"
                      ],
                      "description": "State of the resource. `enabled` allows use of this version of the resource within transforms. `disabled` allows this version of the resource to be used within existing transforms but not allowed to be used as part of new transforms. `frozen` prevents any version of the resource from use within any transforms including pre-existing."
                    },
                    "groups": {
                      "description": "Groups that have access to the calculation.",
                      "type": "array",
                      "items": {
                        "description": "The group ID as managed by the Access Management module.",
                        "type": "string"
                      }
                    },
                    "tags": {
                      "$ref": "#/components/schemas/tags"
                    },
                    "createdBy": {
                      "description": "ID of owner.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "Date/time created",
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedBy": {
                      "description": "Last ID of user who made a change.",
                      "type": "string"
                    },
                    "updatedAt": {
                      "description": "Date/time updated",
                      "format": "date-time",
                      "type": "string"
                    },
                    "activeAt": {
                      "description": "Date/time resource is active",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dryRunOptions": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "description": "An object with key values representing the parameters and its expected values.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "summary",
                    "formula",
                    "outputs",
                    "version",
                    "state",
                    "groups",
                    "createdBy",
                    "createdAt"
                  ]
                },
                "examples": {
                  "Existing calculation": {
                    "summary": "Calculation retrieved successfully.",
                    "value": {
                      "id": "03d66e78d",
                      "name": "vehicle_emissions",
                      "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                      "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                      "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                      "parameters": [
                        {
                          "index": 0,
                          "key": "vehicleType",
                          "label": "Vehicle Type",
                          "description": "Type of vehicle",
                          "type": "string"
                        },
                        {
                          "index": 1,
                          "key": "pollutant",
                          "label": "CO2eq pollutant",
                          "description": "The CO2eq pollutant to lookup from the emission factor",
                          "type": "string"
                        },
                        {
                          "index": 2,
                          "key": "distance",
                          "label": "Distance (Miles)",
                          "description": "Distance (in miles)",
                          "type": "number"
                        },
                        {
                          "index": 3,
                          "key": "passengers",
                          "label": "Passengers",
                          "description": "No. of passengers",
                          "type": "number"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "result",
                          "description": "The calculated CO2eq pollutant.",
                          "type": "number"
                        }
                      ],
                      "tags": {
                        "datasource": "GHG Protocol",
                        "type": "material/metal/steel"
                      },
                      "version": 2,
                      "groups": [
                        "/usa/northwest"
                      ],
                      "state": "enabled",
                      "createdAt": "2022-08-10T23:55:20.322Z",
                      "createdBy": "someone@somewhere.com",
                      "updatedAt": "2022-08-12T07:34:23.132Z",
                      "updatedBy": "someoneelse@somewhere.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/calculations/{id}/versions": {
      "get": {
        "operationId": "listVersions",
        "summary": "List all versions.",
        "tags": [
          "Calculations"
        ],
        "description": "List the latets versions of calculations.\n\nPermissions:\n- Only `readers` of the group in context may list versions of a calculation.\n",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "fromVersion",
            "required": false,
            "description": "Version to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "versionAsAt",
            "required": false,
            "description": "Filters by `asAt` or `createdAt` determine the latest resource version as that time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {
                    "calculations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/calculationResource"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "lastEvaluatedVersion": {
                          "description": "Version of the calculation.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "required": [
                    "calculations"
                  ]
                },
                "examples": {
                  "List of versions of a calculation": {
                    "summary": "Paginated list of versions of a calculation.",
                    "value": {
                      "calculations": [
                        {
                          "id": "03d66e78d",
                          "name": "vehicle_emissions",
                          "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                          "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                          "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                          "parameters": [
                            {
                              "index": 0,
                              "key": "vehicleType",
                              "label": "Vehicle Type",
                              "description": "Type of vehicle",
                              "type": "string"
                            },
                            {
                              "index": 1,
                              "key": "pollutant",
                              "label": "CO2eq pollutant",
                              "description": "The CO2eq pollutant to lookup from the emission factor",
                              "type": "string"
                            },
                            {
                              "index": 2,
                              "key": "distance",
                              "label": "Distance (Miles)",
                              "description": "Distance (in miles)",
                              "type": "number"
                            },
                            {
                              "index": 3,
                              "key": "passengers",
                              "label": "Passengers",
                              "description": "No. of passengers",
                              "type": "number"
                            }
                          ],
                          "outputs": [
                            {
                              "name": "result",
                              "description": "The calculated CO2eq pollutant.",
                              "type": "number"
                            }
                          ],
                          "tags": {
                            "datasource": "GHG Protocol",
                            "type": "material/metal/steel"
                          },
                          "version": 1,
                          "groups": [
                            "/usa/northwest"
                          ],
                          "state": "enabled",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com"
                        },
                        {
                          "id": "03d66e78d",
                          "name": "vehicle_emissions",
                          "summary": "Calculates vehicle CO2eq emissions using the GHG Protocol.",
                          "description": "If the no. of passengers is provided, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'passenger_vehicles' emission factor data and multiplied by the provided distance and passengers. If not, the CO2 emissions are calculated by looking up the requested pollutant for the provided 'vehicle_type' from the 'vehicles' emission factor data and multiplied by the provided distance.",
                          "formula": "IF(COALESCE(:passengers,0)>0,EMISSION_FACTOR('passenger_vehicles',:vehicleType,:pollutant)*:distance*:passengers,EMISSION_FACTOR('vehicles',:vehicleType,:pollutant)*:distance)",
                          "parameters": [
                            {
                              "index": 0,
                              "key": "vehicleType",
                              "label": "Vehicle Type",
                              "description": "Type of vehicle",
                              "type": "string"
                            },
                            {
                              "index": 1,
                              "key": "pollutant",
                              "label": "CO2eq pollutant",
                              "description": "The CO2eq pollutant to lookup from the emission factor",
                              "type": "string"
                            },
                            {
                              "index": 2,
                              "key": "distance",
                              "label": "Distance (Miles)",
                              "description": "Distance (in miles)",
                              "type": "number"
                            },
                            {
                              "index": 3,
                              "key": "passengers",
                              "label": "Passengers",
                              "description": "No. of passengers",
                              "type": "number"
                            }
                          ],
                          "outputs": [
                            {
                              "name": "result",
                              "description": "The calculated CO2eq pollutant.",
                              "type": "number"
                            }
                          ],
                          "tags": {
                            "datasource": "GHG Protocol",
                            "type": "material/metal/steel"
                          },
                          "version": 2,
                          "groups": [
                            "/usa/northwest"
                          ],
                          "state": "enabled",
                          "createdAt": "2022-08-10T23:55:20.322Z",
                          "createdBy": "someone@somewhere.com",
                          "updatedAt": "2022-08-12T07:34:23.132Z",
                          "updatedBy": "someoneelse@somewhere.com"
                        }
                      ],
                      "pagination": {
                        "lastEvaluatedVersion": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calculations/{id}/groups/{groupId}": {
      "put": {
        "operationId": "grant",
        "summary": "Grants access",
        "tags": [
          "Calculations"
        ],
        "description": "Grants access of the calculation to the provided group.\n\n\t\t\tPermissions:\n\t\t\t- `admin` and above of both the active group in context and the target group required.\n\t\t\t",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "revoke",
        "summary": "Revoke access",
        "tags": [
          "Calculations"
        ],
        "description": "Revokes access of the calculation to the provided group.\n\nPermissions:\n- `admin` and above of both the active group in context and the target group required.\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique id."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group id."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "admin",
          "superAdmin"
        ],
        "responses": {
          "204": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success.",
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not found.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tags/{key}": {
      "get": {
        "operationId": "listTags",
        "summary": "List tag values",
        "tags": [
          "Tags"
        ],
        "description": "List tags for a given key.\n\nFor hierarchical / cascading tags, provide the `?parentValue` query string parameter.\n\nPermissions:\n- `reader` and above may list tags.\n",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "count",
            "required": false,
            "description": "Count of results to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromValue",
            "required": false,
            "description": "Tag value to paginate from (exclusive)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "parentValue",
            "required": false,
            "description": "Chosen parent value for use with hierarchical tags."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true,
            "description": "Tag key."
          },
          {
            "in": "header",
            "name": "accept-version",
            "required": true,
            "description": "API version",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "accept",
            "required": true,
            "description": "Accepted Content Type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-security-scopes": [
          "reader",
          "contributor",
          "admin",
          "superAdmin"
        ],
        "responses": {
          "200": {
            "description": "List of tag values",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of tag values",
                  "type": "object",
                  "properties": {
                    "values": {
                      "description": "Tag values and labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "No. of results returned when pagination requested.",
                          "type": "integer"
                        },
                        "lastEvaluatedValue": {
                          "description": "Last evaluated tag value",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "values"
                  ]
                },
                "examples": {
                  "List of tag values": {
                    "summary": "Paginated list of tag values.",
                    "value": {
                      "values": [
                        {
                          "ghg protocol": "GHG Protocol",
                          "the green alliance": "The Green Alliance"
                        }
                      ],
                      "pagination": {
                        "count": 2,
                        "lastEvaluated": {
                          "value": "the green alliance"
                        }
                      }
                    },
                    "List of hierarchical tag values": {
                      "summary": "Paginated list of hierarchical tag values.",
                      "value": {
                        "values": [
                          {
                            "material/metal/steel": "Steel",
                            "material/metal/iron": "Iron"
                          }
                        ],
                        "pagination": {
                          "count": 2,
                          "lastEvaluated": {
                            "value": "material/metal/iron"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden.",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Calculations",
      "description": "Calculations"
    }
  ]
}